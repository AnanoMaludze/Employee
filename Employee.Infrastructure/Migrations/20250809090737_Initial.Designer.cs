// <auto-generated />
using Employee.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Employee.Infrastructure.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20250809090737_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Employee.Domain.Entities.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Main Manager"
                        },
                        new
                        {
                            Id = 2,
                            ManagerId = 1,
                            Name = "Employee 1"
                        },
                        new
                        {
                            Id = 3,
                            ManagerId = 1,
                            Name = "Employee 2"
                        },
                        new
                        {
                            Id = 4,
                            ManagerId = 2,
                            Name = "Employee 3"
                        },
                        new
                        {
                            Id = 5,
                            ManagerId = 2,
                            Name = "Employee 4"
                        },
                        new
                        {
                            Id = 6,
                            ManagerId = 3,
                            Name = "Employee 5"
                        });
                });

            modelBuilder.Entity("Employee.Domain.Entities.Employees", b =>
                {
                    b.HasOne("Employee.Domain.Entities.Employees", null)
                        .WithMany("Subordinates")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Employee.Domain.Entities.Employees", b =>
                {
                    b.Navigation("Subordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
